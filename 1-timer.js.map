{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\nimport flatpickr from \"flatpickr\";\nimport \"flatpickr/dist/flatpickr.min.css\";\n\nconst startBtn = document.querySelector('button[data-start]');\n\n\nstartBtn.disabled = true;\n\nlet userSelectedDates = null;\n\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n    onClose(selectedDates) {\n        if (selectedDates[0] < Date.now()) {\n          \n          iziToast.error({\n            message: `Please choose a date in the future`,\n            position: 'topRight'\n          });\n            return;\n     }\n        userSelectedDates = selectedDates[0];\n                startBtn.disabled = false;\n        console.log('Вибрана дата: ', selectedDates[0]);\n\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\n\nfunction pad(value) {\n  return String(value).padStart(2, '0');\n}\n\nfunction ms2str(time) {\n  const days = pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n  const hours = pad(Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)));\n  const mins = pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n  const secs = pad(Math.floor((time % (1000 * 60)) / 1000));\n\n  return {\n    days,\n    hours,\n    minutes: mins,\n    seconds: secs,\n  };\n}\n\nlet intervalId;\nstartBtn.addEventListener('click', () => {\n  if (intervalId) return;\n\n  intervalId = setInterval(() => {\n    const currentTime = Date.now();\n    const diff = userSelectedDates - currentTime;\n\n    if (diff < 1000) {\n      clearInterval(intervalId);\n      updateTimerUI(ms2str(0));\n      return;\n    }\n\n    const timeData = ms2str(diff);\n    updateTimerUI(timeData);\n  }, 1000);\n});\n\nfunction updateTimerUI({ days, hours, minutes, seconds }) {\n  document.querySelector('[data-days]').textContent = days;\n  document.querySelector('[data-hours]').textContent = hours;\n  document.querySelector('[data-minutes]').textContent = minutes;\n  document.querySelector('[data-seconds]').textContent = seconds;\n}\n\n\n"],"names":["startBtn","userSelectedDates","options","selectedDates","iziToast","flatpickr","pad","value","ms2str","time","days","hours","mins","secs","intervalId","currentTime","diff","updateTimerUI","timeData","minutes","seconds"],"mappings":"+IAKA,MAAMA,EAAW,SAAS,cAAc,oBAAoB,EAG5DA,EAAS,SAAW,GAEpB,IAAIC,EAAoB,KAGxB,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACf,QAAQC,EAAe,CACnB,GAAIA,EAAc,CAAC,EAAI,KAAK,IAAG,EAAI,CAEjCC,EAAS,MAAM,CACb,QAAS,qCACT,SAAU,UACtB,CAAW,EACC,MACN,CACEH,EAAoBE,EAAc,CAAC,EAC3BH,EAAS,SAAW,GAC5B,QAAQ,IAAI,iBAAkBG,EAAc,CAAC,CAAC,CAEnD,CACH,EAEAE,EAAU,mBAAoBH,CAAO,EAGrC,SAASI,EAAIC,EAAO,CAClB,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,GAAG,CACtC,CAEA,SAASC,EAAOC,EAAM,CACpB,MAAMC,EAAOJ,EAAI,KAAK,MAAMG,EAAQ,KAAoB,CAAC,EACnDE,EAAQL,EAAI,KAAK,MAAOG,GAAQ,IAAO,GAAK,GAAK,KAAQ,IAAO,GAAK,GAAG,CAAC,EACzEG,EAAON,EAAI,KAAK,MAAOG,GAAQ,IAAO,GAAK,KAAQ,IAAO,GAAG,CAAC,EAC9DI,EAAOP,EAAI,KAAK,MAAOG,GAAQ,IAAO,IAAO,GAAI,CAAC,EAExD,MAAO,CACL,KAAAC,EACA,MAAAC,EACA,QAASC,EACT,QAASC,CACb,CACA,CAEA,IAAIC,EACJd,EAAS,iBAAiB,QAAS,IAAM,CACnCc,IAEJA,EAAa,YAAY,IAAM,CAC7B,MAAMC,EAAc,KAAK,MACnBC,EAAOf,EAAoBc,EAEjC,GAAIC,EAAO,IAAM,CACf,cAAcF,CAAU,EACxBG,EAAcT,EAAO,CAAC,CAAC,EACvB,MACD,CAED,MAAMU,EAAWV,EAAOQ,CAAI,EAC5BC,EAAcC,CAAQ,CACvB,EAAE,GAAI,EACT,CAAC,EAED,SAASD,EAAc,CAAE,KAAAP,EAAM,MAAAC,EAAO,QAAAQ,EAAS,QAAAC,CAAO,EAAI,CACxD,SAAS,cAAc,aAAa,EAAE,YAAcV,EACpD,SAAS,cAAc,cAAc,EAAE,YAAcC,EACrD,SAAS,cAAc,gBAAgB,EAAE,YAAcQ,EACvD,SAAS,cAAc,gBAAgB,EAAE,YAAcC,CACzD"}